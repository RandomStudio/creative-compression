{"version":3,"sources":["Uploader/Uploader.js","Sidebar/Sidebar.js","Canvas/Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["Uploader","API_URL","resetState","setImageFilename","setIsLoading","onUpload","event","a","fetch","method","body","target","files","response","json","filename","console","error","preventDefault","className","for","id","onChange","type","Sidebar","savedShapes","shapeVisibilities","setSavedShapes","setShapeVisibilities","areLayersVisible","some","visible","map","isShapeVisible","index","onClick","shape","i","filter","exists","visibility","state","deleteShape","checked","entry","Canvas","canvasRef","imageFilename","currentShapeRef","useRef","useState","isVerticalRatio","setIsVerticalRatio","image","setImage","useEffect","img","Image","src","length","JSON","stringify","current","width","decoding","decode","then","height","drawRectContext","setDrawRectContext","refreshImage","useCallback","context","clientWidth","clientHeight","drawImage","refreshShapes","startX","startY","strokeStyle","strokeRect","redrawCanvas","sharedContext","getContext","clearRect","getCanvasCoords","clientX","clientY","rect","getBoundingClientRect","x","left","y","top","onMouseUp","onMouseDown","coords","onMouseLeave","onMouseMove","ref","App","isLoading","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.664e8db9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Uploader = ({ API_URL, resetState, setImageFilename, setIsLoading }) => {\n  const onUpload = async event => {\n    setIsLoading(true);\n    resetState();\n    try {\n      const response = await fetch(API_URL + '/upload', {\n        method: 'POST',\n        body: event.target.files[0]\n      });\n      const { filename } = await response.json();\n      setImageFilename(filename);\n    } catch(error) {\n      console.error(error);\n    }\n    setIsLoading(false);\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"uploader\">\n      <label for=\"upload\">Load image</label>\n      <input id=\"upload\" onChange={onUpload} type=\"file\" />\n    </div>\n  );\n}\n\nexport default Uploader;\n","import React from 'react';\n\nconst Sidebar = ({ savedShapes, shapeVisibilities, setSavedShapes, setShapeVisibilities }) => {\n  const toggleShapeVisibility = index => {\n    const updatedState = shapeVisibilities.map((state, i) => i === index ? !state : state)\n    setShapeVisibilities(updatedState);\n  }\n\n  const deleteShape = index => {\n    setSavedShapes(savedShapes.map((shape, i) => index === i ? false : shape).filter(exists => exists));\n    setShapeVisibilities(shapeVisibilities.map((visibility, i) => index === i ? null : visibility).filter(state => state !== null));\n  }\n\n  const areLayersVisible = shapeVisibilities.some(visible => visible !== false);\n\n  const toggleAllBorders = () => {\n    setShapeVisibilities(shapeVisibilities.map(entry => !areLayersVisible));\n  }\n\n\n  return (\n    <>\n      {shapeVisibilities.map((isShapeVisible, index) => (\n        <div className=\"row\">\n          <p className=\"row-title\">Box {index}</p>\n          <button onClick={() => deleteShape(index)}>Delete</button>\n        </div>\n      ))}\n      <div className=\"row options\">\n        <input type=\"checkbox\" checked={areLayersVisible} onChange={toggleAllBorders} />\n        Toggle guides\n      </div>\n    </>\n  );\n}\n\nexport default Sidebar;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nconst API_URL = process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n\nconst Canvas = ({ canvasRef, imageFilename, savedShapes, shapeVisibilities, setIsLoading, setSavedShapes, setShapeVisibilities }) => {\n  const currentShapeRef = useRef([0, 0, 0, 0]);\n\n  const [isVerticalRatio, setIsVerticalRatio] = useState(false);\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    if (!imageFilename) {\n      return;\n    }\n    setIsLoading(true);\n    const img = new Image();\n    img.src = savedShapes.length > 0 ? `${API_URL}/composition/preview_${imageFilename}?boxes=${JSON.stringify(savedShapes)}&width=${canvasRef.current.width}` : `${API_URL}/static/uploads/preview_${imageFilename}`;\n    img.decoding = 'async';\n    img.decode().then(() => {\n      setIsVerticalRatio(img.width < img.height);\n      setIsLoading(false);\n      setImage(img);\n    });\n  }, [canvasRef, imageFilename, savedShapes, setIsLoading]);\n\n\n  const [drawRectContext, setDrawRectContext] = useState(null);\n  const refreshImage = useCallback(async (context) => {\n    if (!image) {\n      return;\n    }\n    if (image.width > image.height) {\n      setIsVerticalRatio(false);\n      canvasRef.current.width = canvasRef.current.clientWidth;\n      canvasRef.current.height = (canvasRef.current.clientWidth / image.width) * image.height\n    } else {\n      setIsVerticalRatio(true);\n      canvasRef.current.height = canvasRef.current.clientHeight;\n      canvasRef.current.width = (canvasRef.current.clientHeight / image.height) * image.width\n    }\n    context.drawImage(image, 0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, [canvasRef, image]);\n\n  const refreshShapes = useCallback((context) => {\n    savedShapes.map(([startX, startY, width, height], i) => {\n      if (!shapeVisibilities[i]) {\n        return false;\n      }\n      context.strokeStyle = 'blue'\n      context.strokeRect(startX, startY, width, height);\n      return true;\n    })\n  }, [savedShapes, shapeVisibilities]);\n\n\n  const redrawCanvas = useCallback(async (sharedContext) => {\n    if (!sharedContext && !canvasRef.current) {\n      return;\n    }\n    const context = sharedContext ?? canvasRef.current.getContext('2d');\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    refreshImage(context);\n    refreshShapes(context);\n  }, [canvasRef, refreshImage, refreshShapes]);\n\n  useEffect(() => {\n    redrawCanvas();\n  }, [redrawCanvas, savedShapes, shapeVisibilities]);\n\n  const getCanvasCoords = function (clientX, clientY) {\n    var rect = canvasRef.current.getBoundingClientRect();\n\n    return {\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    };\n  };\n\n  const onMouseDown = event => {\n    const context = canvasRef.current.getContext('2d');\n    setDrawRectContext(context);\n    const coords = getCanvasCoords(event.clientX, event.clientY);\n    currentShapeRef.current = [coords.x, coords.y, 0, 0];\n  };\n\n  const onMouseUp = event => {\n    setDrawRectContext(null);\n    if (!currentShapeRef.current[2] === 0 || currentShapeRef.current[3] === 0) {\n      return;\n    }\n    setSavedShapes(state => [...state, currentShapeRef.current]);\n    setShapeVisibilities(state => [...state, true]);\n  }\n\n  const onMouseMove = event => {\n    if (!drawRectContext) {\n      return;\n    }\n\n    redrawCanvas(drawRectContext);\n\n    const [startX, startY] = currentShapeRef.current;\n    const coords = getCanvasCoords(event.clientX, event.clientY);\n    const width = coords.x - startX;\n    const height = coords.y - startY;\n\n    drawRectContext.strokeStyle = 'blue'\n    drawRectContext.strokeRect(startX, startY, width, height);\n    currentShapeRef.current = [startX, startY, width, height]\n  };\n\n  const onMouseLeave = () => {\n    if (drawRectContext) {\n      onMouseUp();\n      return;\n    }\n  }\n\n  return (\n    <canvas\n      className={`canvas ${isVerticalRatio ? 'is-vertical' : ''}`}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n      onMouseLeave={onMouseLeave}\n      onMouseMove={onMouseMove}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default Canvas;\n","import './App.css';\nimport React, { useRef, useState } from 'react';\nimport Uploader from './Uploader/Uploader';\nimport Sidebar from './Sidebar/Sidebar';\nimport Canvas from './Canvas/Canvas';\n\nconst API_URL = process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n\nfunction App() {\n  const canvasRef = useRef();\n  const [imageFilename, setImageFilename] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [savedShapes, setSavedShapes] = useState([]);\n  const [shapeVisibilities, setShapeVisibilities] = useState([]);\n\n  const resetState = async event => {\n    setImageFilename(null);\n    setSavedShapes([]);\n    setShapeVisibilities([]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"main\">\n        <Canvas canvasRef={canvasRef} imageFilename={imageFilename} savedShapes={savedShapes} shapeVisibilities={shapeVisibilities} setIsLoading={setIsLoading} setSavedShapes={setSavedShapes} setShapeVisibilities={setShapeVisibilities} />\n        {isLoading && <div className=\"loader\" />}\n      </div>\n      <div className=\"sidebar\">\n        <Sidebar shapeVisibilities={shapeVisibilities} setShapeVisibilities={setShapeVisibilities} savedShapes={savedShapes} setSavedShapes={setSavedShapes} /> \n        <Uploader API_URL={API_URL} resetState={resetState} setImageFilename={setImageFilename} setIsLoading={setIsLoading} />\n        <a href={`${API_URL}/composition/${imageFilename}?boxes=${JSON.stringify(savedShapes)}&width=${canvasRef?.current?.width}`} target=\"_blank\" className=\"downloader\">Save high quality</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}