{"version":3,"sources":["Uploader/Uploader.js","Sidebar/Sidebar.js","Canvas/Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["Uploader","API_URL","resetState","setImageFilename","setIsLoading","onUpload","event","a","fetch","method","body","target","files","response","json","filename","console","error","preventDefault","className","htmlFor","id","onChange","type","Sidebar","deleteShape","distances","hasVisibleBorders","savedShapes","setDistances","setHasVisibleBorders","setSteps","setSpeeds","speeds","steps","updateSetting","value","index","func","v","Math","max","parseInt","map","shape","e","onClick","join","checked","Canvas","addShape","canvasRef","imageUrl","currentShapeRef","useRef","useState","isVerticalRatio","setIsVerticalRatio","image","setImage","useEffect","img","Image","src","decoding","decode","then","width","height","drawRectContext","setDrawRectContext","refreshImage","useCallback","context","current","clientWidth","clientHeight","drawImage","refreshShapes","i","startX","startY","strokeStyle","strokeRect","redrawCanvas","sharedContext","getContext","clearRect","getCanvasCoords","clientX","clientY","rect","getBoundingClientRect","x","left","y","top","onMouseUp","onMouseDown","coords","onMouseLeave","onMouseMove","ref","App","imageFilename","isLoading","setSavedShapes","removeFromArray","array","filter","exists","isPreview","length","JSON","stringify","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOA4BeA,G,MA1BE,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,QAASC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,aACnDC,EAAQ,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DACfH,GAAa,GACbF,IAFe,kBAIUM,MAAMP,EAAU,UAAW,CAChDQ,OAAQ,OACRC,KAAMJ,EAAMK,OAAOC,MAAM,KANd,cAIPC,EAJO,gBAQcA,EAASC,OARvB,gBAQLC,EARK,EAQLA,SACRZ,EAAiBY,GATJ,kDAWbC,QAAQC,MAAR,MAXa,QAafb,GAAa,GACbE,EAAMY,iBAdS,0DAAH,sDAiBd,OACE,sBAAKC,UAAU,WAAf,UACE,uBAAOC,QAAQ,SAAf,wBACA,uBAAOC,GAAG,SAASC,SAAUjB,EAAUkB,KAAK,cC+BnCC,EApDC,SAAC,GAWV,IAVLC,EAUI,EAVJA,YACAC,EASI,EATJA,UACAC,EAQI,EARJA,kBACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,aACAC,EAKI,EALJA,qBACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,OACAC,EACI,EADJA,MAEMC,EAAgB,SAACC,EAAOC,EAAOC,GAC9BF,GAGLE,GAAK,SAAAC,GAEH,OADAA,EAAEF,GAASG,KAAKC,IAAI,EAAGC,SAASN,IACzB,YAAIG,OAIf,OACE,qCACA,qBAAKpB,UAAU,QAAf,SACGS,EAAYe,KAAI,SAACC,EAAOP,GAAR,OACf,sBAAKlB,UAAU,MAAf,UACE,oBAAGA,UAAU,YAAb,iBAA8BkB,KAC9B,sBAAKlB,UAAU,YAAf,8BAEE,uBAAOI,KAAK,SAASa,MAAOH,EAAOI,GAAQf,SAAU,SAAAuB,GAAC,OAAIV,EAAcU,EAAElC,OAAOyB,MAAOC,EAAOL,SAEjG,sBAAKb,UAAU,YAAf,+BAEE,uBAAOI,KAAK,SAASa,MAAOV,EAAUW,GAAQf,SAAU,SAAAuB,GAAC,OAAIV,EAAcU,EAAElC,OAAOyB,MAAOC,EAAOR,SAEpG,wBAAQiB,QAAS,kBAAMrB,EAAYY,IAAnC,sBAVF,UAA6BA,EAA7B,YAAsCO,EAAMG,KAAK,YAcnD,sBAAK5B,UAAU,cAAf,UACE,uBAAOI,KAAK,WAAWyB,QAASrB,EAAmBL,SAAU,kBAAMQ,GAAsBH,MAD3F,qBAIA,sBAAKR,UAAU,cAAf,UACE,uBAAOI,KAAK,SAASa,MAAOF,EAAOZ,SAAU,SAAAuB,GAAC,OAAId,EAASc,EAAElC,OAAOyB,UADtE,yBC6ESa,EAzHA,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,SAAUxB,EAAgC,EAAhCA,YAAaxB,EAAmB,EAAnBA,aACtDiD,EAAkBC,iBAAO,CAAC,EAAG,EAAG,EAAG,IADsC,EAGjCC,oBAAS,GAHwB,mBAGxEC,EAHwE,KAGvDC,EAHuD,OAIrDF,mBAAS,MAJ4C,mBAIxEG,EAJwE,KAIjEC,EAJiE,KAK/EC,qBAAU,WACR,GAAKR,EAAL,CAGAhD,GAAa,GACb,IAAMyD,EAAM,IAAIC,MAChBD,EAAIE,IAAMX,EACVS,EAAIG,SAAW,QACfH,EAAII,SAASC,MAAK,WAChBT,EAAmBI,EAAIM,MAAQN,EAAIO,QACnChE,GAAa,GACbuD,EAASE,SAEV,CAACV,EAAWC,EAAUhD,IAlBsD,MAqBjCmD,mBAAS,MArBwB,mBAqBxEc,EArBwE,KAqBvDC,EArBuD,KAsBzEC,EAAeC,sBAAW,uCAAC,WAAOC,GAAP,SAAAlE,EAAA,yDAC1BmD,EAD0B,iDAI3BA,EAAMS,MAAQT,EAAMU,QACtBX,GAAmB,GACnBN,EAAUuB,QAAQP,MAAQhB,EAAUuB,QAAQC,YAC5CxB,EAAUuB,QAAQN,OAAUjB,EAAUuB,QAAQC,YAAcjB,EAAMS,MAAST,EAAMU,SAEjFX,GAAmB,GACnBN,EAAUuB,QAAQN,OAASjB,EAAUuB,QAAQE,aAC7CzB,EAAUuB,QAAQP,MAAShB,EAAUuB,QAAQE,aAAelB,EAAMU,OAAUV,EAAMS,OAEpFM,EAAQI,UAAUnB,EAAO,EAAG,EAAGP,EAAUuB,QAAQP,MAAOhB,EAAUuB,QAAQN,QAb3C,2CAAD,sDAc7B,CAACjB,EAAWO,IAEToB,EAAgBN,uBAAY,SAACC,GACjC7C,EAAYe,KAAI,WAAkCoC,GAAO,IAAD,mBAAtCC,EAAsC,KAA9BC,EAA8B,KAAtBd,EAAsB,KAAfC,EAAe,KAGtD,OAFAK,EAAQS,YAAc,cACtBT,EAAQU,WAAWH,EAAQC,EAAQd,EAAOC,IACnC,OAER,CAACxC,IAGEwD,EAAeZ,sBAAW,uCAAC,WAAOa,GAAP,eAAA9E,EAAA,yDAC1B8E,GAAkBlC,EAAUuB,QADF,kDAIzBD,EAJyB,OAIfY,QAJe,IAIfA,IAAiBlC,EAAUuB,QAAQY,WAAW,OACtDC,UAAU,EAAG,EAAGpC,EAAUuB,QAAQP,MAAOhB,EAAUuB,QAAQN,QACnEG,EAAaE,GACbK,EAAcL,GAPiB,2CAAD,sDAQ7B,CAACtB,EAAWoB,EAAcO,IAE7BlB,qBAAU,WACRwB,MACC,CAACA,EAAchC,IAElB,IAAMoC,EAAkB,SAAUC,EAASC,GACzC,IAAIC,EAAOxC,EAAUuB,QAAQkB,wBAE7B,MAAO,CACLC,EAAGJ,EAAUE,EAAKG,KAClBC,EAAGL,EAAUC,EAAKK,MAWhBC,EAAY,SAAA3F,GAChBgE,EAAmB,MACiB,KAA/BjB,EAAgBqB,QAAQ,IAA2C,IAA/BrB,EAAgBqB,QAAQ,IAGjExB,EAASG,EAAgBqB,UA2B3B,OACE,wBACEvD,UAAS,iBAAYqC,EAAkB,cAAgB,IACvD0C,YAAa9C,EA1CG,SAAA9C,GAClB,IAAMmE,EAAUtB,EAAUuB,QAAQY,WAAW,MAC7ChB,EAAmBG,GACnB,IAAM0B,EAASX,EAAgBlF,EAAMmF,QAASnF,EAAMoF,SACpDrC,EAAgBqB,QAAU,CAACyB,EAAON,EAAGM,EAAOJ,EAAG,EAAG,IAsCV,KACtCE,UAAW7C,EAAW6C,EAAY,KAClCG,aAAchD,EAZG,WACfiB,GACF4B,KAUwC,KACxCI,YAAajD,EA9BG,SAAA9C,GAClB,GAAK+D,EAAL,CAIAe,EAAaf,GALc,kBAOFhB,EAAgBqB,QAPd,GAOpBM,EAPoB,KAOZC,EAPY,KAQrBkB,EAASX,EAAgBlF,EAAMmF,QAASnF,EAAMoF,SAC9CvB,EAAQgC,EAAON,EAAIb,EACnBZ,EAAS+B,EAAOJ,EAAId,EAE1BZ,EAAgBa,YAAc,OAC9Bb,EAAgBc,WAAWH,EAAQC,EAAQd,EAAOC,GAClDf,EAAgBqB,QAAU,CAACM,EAAQC,EAAQd,EAAOC,KAgBV,KACtCkC,IAAKnD,KCxCIoD,MAtEf,WACE,IAAMpD,EAAYG,mBADL,EAE6BC,mBAAS,MAFtC,mBAENiD,EAFM,KAESrG,EAFT,OAGqBoD,oBAAS,GAH9B,mBAGNkD,EAHM,KAGKrG,EAHL,OAKyBmD,mBAAS,IALlC,mBAKN3B,EALM,KAKO8E,EALP,OAMqCnD,oBAAS,GAN9C,mBAMN5B,EANM,KAMaG,EANb,OAQeyB,mBAAS,IARxB,mBAQNtB,EARM,KAQED,EARF,OASauB,mBAAS,GATtB,mBASNrB,EATM,KASCH,EATD,OAUqBwB,mBAAS,IAV9B,mBAUN7B,EAVM,KAUKG,EAVL,KAYP3B,EAAU,uCAAG,WAAMI,GAAN,SAAAC,EAAA,sDACjBJ,EAAiB,MACjBuG,EAAe,IACf3E,EAAS,GACTC,EAAU,IACVH,EAAa,IALI,2CAAH,sDAeV8E,EAAkB,SAACC,EAAOvE,GAAR,OAAkBuE,EAAMjE,KAAI,SAACP,EAAO2C,GAAR,OAAc1C,IAAU0C,GAAY3C,KAAOyE,QAAO,SAAAC,GAAM,OAAIA,MAO1G1D,EAAW,eAAC2D,IAAD,gEAAsBnF,EAAYoF,OAAS,EAArB,UApC0C,GAoC1C,wBACTD,EAAY,WAAa,IADhB,OACqBP,EADrB,kBAC4CS,KAAKC,UAAUtF,GAD3D,kBACiFuB,EAAUuB,QAAQP,MADnG,wBACwHxC,EADxH,mBACoJsF,KAAKC,UAAUjF,GADnK,kBACoLC,EADpL,sBACuM+E,KAAKC,UAAUxF,IADtN,UApC0C,GAoC1C,mCAEE8E,IAEzC,OACE,sBAAKrF,UAAU,OAAf,UACE,sBAAKA,UAAS,eAAWqF,EAA6B,GAAb,YAAzC,UACE,cAAC,EAAD,CACEtD,SAtBS,SAAAN,GACf8D,EAAe,GAAD,mBAAK9E,GAAL,CAAkBgB,KAChCf,EAAa,GAAD,mBAAKH,GAAL,CAAgB,KAC5BK,EAAS,GACTC,EAAU,GAAD,mBAAKC,GAAL,CAAa,MAmBhBkB,UAAWA,EACXC,SAAUoD,EAAgBpD,IAAa,KACvCxB,YAAaA,EACbxB,aAAcA,IAEfqG,GAAa,qBAAKtF,UAAU,cAE/B,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEM,YAxBY,SAAAY,GAClBR,EAAa8E,EAAgBjF,EAAWW,IACxCL,EAAU2E,EAAgB1E,EAAQI,IAClCqE,EAAeC,EAAgB/E,EAAaS,KAsBtCX,UAAWA,EACXC,kBAAmBA,EACnBC,YAAaA,EACbC,aAAcA,EACdC,qBAAsBA,EACtBC,SAAUA,EACVC,UAAWA,EACXE,MAAOA,EACPD,OAAQA,IAEV,cAAC,EAAD,CAAUhC,QAjEiE,GAiE/CC,WAAYA,EAAYC,iBAAkBA,EAAkBC,aAAcA,IACtG,mBAAG+G,KAAM/D,GAAS,GAAQzC,OAAO,SAASQ,UAAU,aAApD,wCC5DOiG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e866ec85.chunk.js","sourcesContent":["import React from 'react';\n\nconst Uploader = ({ API_URL, resetState, setImageFilename, setIsLoading }) => {\n  const onUpload = async event => {\n    setIsLoading(true);\n    resetState();\n    try {\n      const response = await fetch(API_URL + '/upload', {\n        method: 'POST',\n        body: event.target.files[0]\n      });\n      const { filename } = await response.json();\n      setImageFilename(filename);\n    } catch(error) {\n      console.error(error);\n    }\n    setIsLoading(false);\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"uploader\">\n      <label htmlFor=\"upload\">Load image</label>\n      <input id=\"upload\" onChange={onUpload} type=\"file\" />\n    </div>\n  );\n}\n\nexport default Uploader;\n","import React from 'react';\n\nconst Sidebar = ({\n  deleteShape,\n  distances,\n  hasVisibleBorders,\n  savedShapes,\n  setDistances,\n  setHasVisibleBorders,\n  setSteps,\n  setSpeeds,\n  speeds,\n  steps\n}) => {\n  const updateSetting = (value, index, func) => {\n    if (!value) {\n      return;\n    }\n    func(v => {\n      v[index] = Math.max(1, parseInt(value));\n      return [...v];\n    })\n  }\n\n  return (\n    <>\n    <div className=\"boxes\">\n      {savedShapes.map((shape, index) => (\n        <div className=\"row\" key={`${index}_${shape.join('-')}`}>\n          <p className=\"row-title\">Box {index}</p>\n          <div className=\"input-row\">\n            Degradation speed\n            <input type=\"number\" value={speeds[index]} onChange={e => updateSetting(e.target.value, index, setSpeeds)} />\n          </div>\n          <div className=\"input-row\">\n            Step width divisor\n            <input type=\"number\" value={distances[index]} onChange={e => updateSetting(e.target.value, index, setDistances)} />\n          </div>\n          <button onClick={() => deleteShape(index)}>Delete</button>\n        </div>\n      ))}\n      </div>\n      <div className=\"row options\">\n        <input type=\"checkbox\" checked={hasVisibleBorders} onChange={() => setHasVisibleBorders(!hasVisibleBorders)} />\n        Display borders\n      </div>\n      <div className=\"row options\">\n        <input type=\"number\" value={steps} onChange={e => setSteps(e.target.value)} />\n        Number of steps\n      </div>\n    </>\n  );\n}\n\nexport default Sidebar;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nconst Canvas = ({ addShape, canvasRef, imageUrl, savedShapes, setIsLoading }) => {\n  const currentShapeRef = useRef([0, 0, 0, 0]);\n\n  const [isVerticalRatio, setIsVerticalRatio] = useState(false);\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    if (!imageUrl) {\n      return;\n    }\n    setIsLoading(true);\n    const img = new Image();\n    img.src = imageUrl;\n    img.decoding = 'async';\n    img.decode().then(() => {\n      setIsVerticalRatio(img.width < img.height);\n      setIsLoading(false);\n      setImage(img);\n    });\n  }, [canvasRef, imageUrl, setIsLoading]);\n\n\n  const [drawRectContext, setDrawRectContext] = useState(null);\n  const refreshImage = useCallback(async (context) => {\n    if (!image) {\n      return;\n    }\n    if (image.width > image.height) {\n      setIsVerticalRatio(false);\n      canvasRef.current.width = canvasRef.current.clientWidth;\n      canvasRef.current.height = (canvasRef.current.clientWidth / image.width) * image.height\n    } else {\n      setIsVerticalRatio(true);\n      canvasRef.current.height = canvasRef.current.clientHeight;\n      canvasRef.current.width = (canvasRef.current.clientHeight / image.height) * image.width\n    }\n    context.drawImage(image, 0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, [canvasRef, image]);\n\n  const refreshShapes = useCallback((context) => {\n    savedShapes.map(([startX, startY, width, height], i) => {\n      context.strokeStyle = 'transparent'\n      context.strokeRect(startX, startY, width, height);\n      return true;\n    })\n  }, [savedShapes]);\n\n\n  const redrawCanvas = useCallback(async (sharedContext) => {\n    if (!sharedContext && !canvasRef.current) {\n      return;\n    }\n    const context = sharedContext ?? canvasRef.current.getContext('2d');\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    refreshImage(context);\n    refreshShapes(context);\n  }, [canvasRef, refreshImage, refreshShapes]);\n\n  useEffect(() => {\n    redrawCanvas();\n  }, [redrawCanvas, imageUrl]);\n\n  const getCanvasCoords = function (clientX, clientY) {\n    var rect = canvasRef.current.getBoundingClientRect();\n\n    return {\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    };\n  };\n\n  const onMouseDown = event => {\n    const context = canvasRef.current.getContext('2d');\n    setDrawRectContext(context);\n    const coords = getCanvasCoords(event.clientX, event.clientY);\n    currentShapeRef.current = [coords.x, coords.y, 0, 0];\n  };\n\n  const onMouseUp = event => {\n    setDrawRectContext(null);\n    if (!currentShapeRef.current[2] === 0 || currentShapeRef.current[3] === 0) {\n      return;\n    }\n    addShape(currentShapeRef.current);\n  }\n\n  const onMouseMove = event => {\n    if (!drawRectContext) {\n      return;\n    }\n\n    redrawCanvas(drawRectContext);\n\n    const [startX, startY] = currentShapeRef.current;\n    const coords = getCanvasCoords(event.clientX, event.clientY);\n    const width = coords.x - startX;\n    const height = coords.y - startY;\n\n    drawRectContext.strokeStyle = 'blue'\n    drawRectContext.strokeRect(startX, startY, width, height);\n    currentShapeRef.current = [startX, startY, width, height]\n  };\n\n  const onMouseLeave = () => {\n    if (drawRectContext) {\n      onMouseUp();\n      return;\n    }\n  }\n\n  return (\n    <canvas\n      className={`canvas ${isVerticalRatio ? 'is-vertical' : ''}`}\n      onMouseDown={imageUrl ? onMouseDown : null}\n      onMouseUp={imageUrl ? onMouseUp : null}\n      onMouseLeave={imageUrl ? onMouseLeave : null}\n      onMouseMove={imageUrl ? onMouseMove : null}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default Canvas;\n","import './App.css';\nimport React, { useRef, useState } from 'react';\nimport Uploader from './Uploader/Uploader';\nimport Sidebar from './Sidebar/Sidebar';\nimport Canvas from './Canvas/Canvas';\n\nconst API_URL = process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n\nfunction App() {\n  const canvasRef = useRef();\n  const [imageFilename, setImageFilename] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [savedShapes, setSavedShapes] = useState([]);\n  const [hasVisibleBorders, setHasVisibleBorders] = useState(false);\n\n  const [speeds, setSpeeds] = useState([]);\n  const [steps, setSteps] = useState(1);\n  const [distances, setDistances] = useState([]);\n\n  const resetState = async event => {\n    setImageFilename(null);\n    setSavedShapes([]);\n    setSteps(1);\n    setSpeeds([]);\n    setDistances([]);\n  };\n\n  const addShape = shape => {\n    setSavedShapes([...savedShapes, shape]);\n    setDistances([...distances, 5]);\n    setSteps(5);\n    setSpeeds([...speeds, 1]);\n  }\n\n  const removeFromArray = (array, index) => array.map((value, i) => index === i ? false : value).filter(exists => exists)\n  const deleteShape = index => {\n    setDistances(removeFromArray(distances, index));\n    setSpeeds(removeFromArray(speeds, index));\n    setSavedShapes(removeFromArray(savedShapes, index));\n  }\n\n  const imageUrl = (isPreview = true) => savedShapes.length > 0 \n    ? `${API_URL}/composition/${isPreview ? 'preview_' : ''}${imageFilename}?boxes=${JSON.stringify(savedShapes)}&width=${canvasRef.current.width}&showBorders=${hasVisibleBorders}&speeds=${JSON.stringify(speeds)}&steps=${steps}&distances=${JSON.stringify(distances)}`\n    : `${API_URL}/static/uploads/preview_${imageFilename}`;\n\n  return (\n    <div className=\"page\">\n      <div className={`main ${!imageFilename ? 'is-empty' : ''}`}>\n        <Canvas\n          addShape={addShape}\n          canvasRef={canvasRef}\n          imageUrl={imageFilename ? imageUrl() : null}\n          savedShapes={savedShapes}\n          setIsLoading={setIsLoading}\n        />\n        {isLoading && <div className=\"loader\" />}\n      </div>\n      <div className=\"sidebar\">\n        <Sidebar\n          deleteShape={deleteShape}\n          distances={distances}\n          hasVisibleBorders={hasVisibleBorders}\n          savedShapes={savedShapes}\n          setDistances={setDistances}\n          setHasVisibleBorders={setHasVisibleBorders}\n          setSteps={setSteps}\n          setSpeeds={setSpeeds}\n          steps={steps}\n          speeds={speeds}\n        /> \n        <Uploader API_URL={API_URL} resetState={resetState} setImageFilename={setImageFilename} setIsLoading={setIsLoading} />\n        <a href={imageUrl(false)} target=\"_blank\" className=\"downloader\">Export high quality</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}