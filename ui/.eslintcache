[{"/Users/andrew/Repos/compression/ui/src/reportWebVitals.js":"1","/Users/andrew/Repos/compression/ui/src/App.js":"2","/Users/andrew/Repos/compression/ui/src/index.js":"3","/Users/andrew/Repos/compression/ui/src/Canvas/Canvas.js":"4","/Users/andrew/Repos/compression/ui/src/Sidebar/Sidebar.js":"5","/Users/andrew/Repos/compression/ui/src/Uploader/Uploader.js":"6"},{"size":362,"mtime":1606313260564,"results":"7","hashOfConfig":"8"},{"size":1623,"mtime":1606486891224,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1606313260563,"results":"10","hashOfConfig":"8"},{"size":4147,"mtime":1606486728459,"results":"11","hashOfConfig":"8"},{"size":1230,"mtime":1606485241215,"results":"12","hashOfConfig":"8"},{"size":713,"mtime":1606485095991,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nzkl3a",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/andrew/Repos/compression/ui/src/reportWebVitals.js",[],"/Users/andrew/Repos/compression/ui/src/App.js",["29"],"import './App.css';\nimport React, { useRef, useState } from 'react';\nimport Uploader from './Uploader/Uploader';\nimport Sidebar from './Sidebar/Sidebar';\nimport Canvas from './Canvas/Canvas';\n\nconst API_URL = process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n\nfunction App() {\n  const canvasRef = useRef();\n  const [imageFilename, setImageFilename] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [savedShapes, setSavedShapes] = useState([]);\n  const [shapeVisibilities, setShapeVisibilities] = useState([]);\n\n  const resetState = async event => {\n    setImageFilename(null);\n    setSavedShapes([]);\n    setShapeVisibilities([]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"main\">\n        <Canvas canvasRef={canvasRef} imageFilename={imageFilename} savedShapes={savedShapes} shapeVisibilities={shapeVisibilities} setIsLoading={setIsLoading} setSavedShapes={setSavedShapes} setShapeVisibilities={setShapeVisibilities} />\n        {isLoading && <div className=\"loader\" />}\n      </div>\n      <div className=\"sidebar\">\n        <Sidebar shapeVisibilities={shapeVisibilities} setShapeVisibilities={setShapeVisibilities} savedShapes={savedShapes} setSavedShapes={setSavedShapes} /> \n        <Uploader API_URL={API_URL} resetState={resetState} setImageFilename={setImageFilename} setIsLoading={setIsLoading} />\n        <a href={`${API_URL}/composition/${imageFilename}?boxes=${JSON.stringify(savedShapes)}&width=${canvasRef?.current?.width}`} target=\"_blank\" className=\"downloader\">Save high quality</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/andrew/Repos/compression/ui/src/index.js",[],["30","31"],"/Users/andrew/Repos/compression/ui/src/Canvas/Canvas.js",[],"/Users/andrew/Repos/compression/ui/src/Sidebar/Sidebar.js",["32"],"import React from 'react';\n\nconst Sidebar = ({ savedShapes, shapeVisibilities, setSavedShapes, setShapeVisibilities }) => {\n  const toggleShapeVisibility = index => {\n    const updatedState = shapeVisibilities.map((state, i) => i === index ? !state : state)\n    setShapeVisibilities(updatedState);\n  }\n\n  const deleteShape = index => {\n    setSavedShapes(savedShapes.map((shape, i) => index === i ? false : shape).filter(exists => exists));\n    setShapeVisibilities(shapeVisibilities.map((visibility, i) => index === i ? null : visibility).filter(state => state !== null));\n  }\n\n  const areLayersVisible = shapeVisibilities.some(visible => visible !== false);\n\n  const toggleAllBorders = () => {\n    setShapeVisibilities(shapeVisibilities.map(entry => !areLayersVisible));\n  }\n\n\n  return (\n    <>\n      {shapeVisibilities.map((isShapeVisible, index) => (\n        <div className=\"row\">\n          <p className=\"row-title\">Box {index}</p>\n          <button onClick={() => deleteShape(index)}>Delete</button>\n        </div>\n      ))}\n      <div className=\"row options\">\n        <input type=\"checkbox\" checked={areLayersVisible} onChange={toggleAllBorders} />\n        Toggle guides\n      </div>\n    </>\n  );\n}\n\nexport default Sidebar;\n","/Users/andrew/Repos/compression/ui/src/Uploader/Uploader.js",[],{"ruleId":"33","severity":1,"message":"34","line":32,"column":133,"nodeType":"35","endLine":32,"endColumn":148},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":4,"column":9,"nodeType":"42","messageId":"43","endLine":4,"endColumn":30},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'toggleShapeVisibility' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]